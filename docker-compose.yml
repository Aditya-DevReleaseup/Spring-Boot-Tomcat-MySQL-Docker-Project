version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.leresolver.acme.email=YOUR_EMAIL@example.com"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"
      # Uncomment next line if you want the Traefik dashboard
      # - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/letsencrypt:/letsencrypt"
    networks:
      - web

  frontend:
    build: ./frontend
    container_name: todo-frontend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`to-do.devclouds.site`)"
      - "traefik.http.routers.frontend.entrypoints=web,websecure"
      - "traefik.http.routers.frontend.tls.certresolver=leresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - web

  backend:
    build: ./backend
    container_name: todo-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/todoapp
      SPRING_DATASOURCE_USERNAME: todo
      SPRING_DATASOURCE_PASSWORD: todopass
    depends_on:
      - db
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.to-do.devclouds.site`)"
      - "traefik.http.routers.backend.entrypoints=web,websecure"
      - "traefik.http.routers.backend.tls.certresolver=leresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - web
      - internal

  db:
    image: mysql:8
    container_name: todo-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: todoapp
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: todo
      MYSQL_PASSWORD: todopass
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - internal

volumes:
  db-data:

networks:
  web:
    external: false
  internal:
    internal: true
